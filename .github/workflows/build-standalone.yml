name: Build ModShot (standalone)
on: push
jobs:
  build-windows:
    name: Build ModShot for Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { sys: mingw64, env: x86_64 }
          - { sys: ucrt64,  env: ucrt-x86_64 }  # Experimental!
          # - { sys: clang64, env: clang-x86_64 }
    steps:
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Setup msys2
          uses: msys2/setup-msys2@v2
          with:
            msystem: ${{matrix.sys}}
        - name: Install packages with pacman
          shell: msys2 {0}
          run: |
            pacman -S --noconfirm  mm-common autoconf automake gcc make cmake libtool
        - name: Build
          working-directory: ${{ github.workspace }}
          shell: msys2 {0}
          run: |
              bash setup.sh
              cd windows
              make 
              source vars.sh
              cd ..
              meson build
              cd build && ninja
        - name: Bundle libraries
          working-directory: ${{ github.workspace }}\build
          shell: msys2 {0}
          run: |
            meson configure --bindir=. --prefix=$PWD
            ninja install
        - name: Create dist folder
          run: |
            mkdir ${{ runner.temp }}\built_artifact;
            move ${{ runner.temp }}\build\* ${{ runner.temp }}\built_artifact\;
        - name: Upload artifact
          uses: actions/upload-artifact@v2
          with:
            name: modshot_build_windows_${{ github.sha }}_${{ matrix.sys }}
            path: ${{ runner.temp }}\built_artifact
  
  build-ubuntu:
    name: Build ModShot for Linux
    runs-on: ubuntu-latest
    steps:
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Setup Python
          uses: actions/setup-python@v2
        - name: Build
          working-directory: ${{ github.workspace }}
          run: |
              bash setup.sh
              pip3 install meson ninja
              cd linux
              make 
              source vars.sh
              cd ..
              meson build
              cd build && ninja
        - name: Configure distribution folders
          working-directory: ${{ github.workspace }}/build
          run: |
            meson configure --bindir=. --prefix=$PWD
            ninja install
        - name: Create dist folder
          run: |
            mkdir ${{ runner.temp }}/built_artifact;
            move ${{ runner.temp }}/build/* {${ runner.temp }}/built_artifact/;
        - name: Upload artifact
          uses: actions/upload-artifact@v2
          with:
            name: modshot_build_ubuntu_${{ github.sha }}
            path: ${{ runner.temp }}/built_artifact
