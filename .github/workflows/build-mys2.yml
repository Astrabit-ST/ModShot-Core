name: Build Modshot with MSYS2
on: push
jobs:
  build-windows:
    name: Build ModShot for Windows
    runs-on: windows-2019
    env:
      CONAN_USER_HOME: C:\.conan
      CONAN_USER_HOME_SHORT: C:\.conan
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install conan and xxd
        run: choco install -y vim; pip install conan
      - name: Set path to include xxd
        run: '[Environment]::SetEnvironmentVariable("Path", $env:Path + ";C:\tools\vim\vim82", "Machine")'
      - name: Configure conan
        run: |
          conan remote add eliza https://rkevin.jfrog.io/artifactory/api/conan/eliza;
          conan remote add bincrafters https://bincrafters.jfrog.io/artifactory/api/conan/public-conan;
          conan remote add astrabit https://rkevin.jfrog.io/artifactory/api/conan/astrabit;
          conan config set general.revisions_enabled=1;
          conan config set tools.microsoft.bash:subsystem=msys2;
          conan config set tools.microsoft.bash:path=C:\msys64\usr\bin\bash.exe;
          setx CONAN_USE_ALWAYS_SHORT_PATHS 1;
          mkdir ${{ runner.temp }}\build
      - name: Configure profile
        run: |
          conan profile new default --detect;
          conan profile update settings.compiler=gcc default;
          conan profile update settings.compiler.version=8.1 default;
          conan profile update settings.compiler.libcxx=libstdc++11 default  
      - name: Cache conan dependencies
        uses: actions/cache@v2
        with:
          path: C:\.conan
          key: ${{ runner.os }}-cached-conan-modules-${{ hashFiles('conanfile.py') }}
      - name: Build dependencies using conan
        run: conan install ${{ github.workspace }} --build=missing -o msys2=True
        working-directory: ${{ runner.temp }}\build
      - name: Build ModShot
        run: conan build ${{ github.workspace }}
        working-directory: ${{ runner.temp }}\build
      - name: Create dist folder
        run: |
          mkdir ${{ runner.temp }}\built_artifact;
          move ${{ runner.temp }}\build\bin\lib ${{ runner.temp }}\built_artifact\lib;
          move ${{ runner.temp }}\build\bin\* ${{ runner.temp }}\built_artifact\lib;
          move ${{ runner.temp }}\built_artifact\lib\oneshot-shim.exe ${{ runner.temp }}\built_artifact\oneshot.exe
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: modshot_build_windows_${{ github.sha }}
          path: ${{ runner.temp }}\built_artifact
  build-windows-steam:
    name: Build ModShot for Windows (Steam support)
    runs-on: windows-2019
    env:
      CONAN_USER_HOME: C:\.conan
      CONAN_USER_HOME_SHORT: C:\.conan
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install conan and xxd
        run: choco install -y vim; pip install conan
      - name: Set path to include xxd
        run: '[Environment]::SetEnvironmentVariable("Path", $env:Path + ";C:\tools\vim\vim82", "Machine")'
      - name: Configure conan
        run: |
          conan remote add eliza https://rkevin.jfrog.io/artifactory/api/conan/eliza;
          conan remote add bincrafters https://bincrafters.jfrog.io/artifactory/api/conan/public-conan;
          conan remote add astrabit https://rkevin.jfrog.io/artifactory/api/conan/astrabit;
          conan config set general.revisions_enabled=1;
          conan config set tools.microsoft.bash:subsystem=msys2;
          conan config set tools.microsoft.bash:path=C:\msys64\usr\bin\bash.exe;
          setx CONAN_USE_ALWAYS_SHORT_PATHS 1;
          mkdir ${{ runner.temp }}\build
      - name: Configure profile
        run: |
          conan profile new default --detect;
          conan profile update settings.compiler=gcc default;
          conan profile update settings.compiler.version=8.1 default;
          conan profile update settings.compiler.libcxx=libstdc++11 default  
      - name: Cache conan dependencies
        uses: actions/cache@v2
        with:
          path: C:\.conan
          key: ${{ runner.os }}-cached-conan-modules-${{ hashFiles('conanfile.py') }}-steam
      - name: Build dependencies using conan
        run: conan install ${{ github.workspace }} --build=missing -o platform=steam -o msys2=True
        working-directory: ${{ runner.temp }}\build
      - name: Build ModShot
        run: conan build ${{ github.workspace }}
        working-directory: ${{ runner.temp }}\build
      - name: Create dist folder
        run: |
          mkdir ${{ runner.temp }}\built_artifact;
          move ${{ runner.temp }}\build\bin\lib ${{ runner.temp }}\built_artifact\lib;
          move ${{ runner.temp }}\build\bin\* ${{ runner.temp }}\built_artifact\lib;
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: modshot_build_steam_windows_${{ github.sha }}
          path: ${{ runner.temp }}\built_artifact
